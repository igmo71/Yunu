// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Yunu.Api.Infrastructure.Data;

#nullable disable

namespace Yunu.Api.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "10.0.0-rc.2.25502.107")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Yunu.Api.Domain.Product", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("article")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("calculated_purchase_price")
                        .HasColumnType("real");

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("category_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comission")
                        .HasColumnType("int");

                    b.Property<string>("commission_acceptance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("commission_fbo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("commission_pickup_from_warehouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("foreign_delivery_price")
                        .HasColumnType("real");

                    b.Property<string>("foreign_delivery_price_currency_symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("foreign_purchase_price")
                        .HasColumnType("real");

                    b.Property<string>("foreign_purchase_price_currency_symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("height")
                        .HasColumnType("int");

                    b.Property<string>("instruction_link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instruction_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_bad_dimensions_from_mp")
                        .HasColumnType("bit");

                    b.Property<bool>("is_box")
                        .HasColumnType("bit");

                    b.Property<bool>("is_dimensions_diff")
                        .HasColumnType("bit");

                    b.Property<bool>("is_expirable")
                        .HasColumnType("bit");

                    b.Property<bool>("is_fifo")
                        .HasColumnType("bit");

                    b.Property<bool>("is_fragile")
                        .HasColumnType("bit");

                    b.Property<bool>("is_hidden")
                        .HasColumnType("bit");

                    b.Property<bool>("is_pack_in_bubble_wrap")
                        .HasColumnType("bit");

                    b.Property<bool>("is_pack_in_cardboard")
                        .HasColumnType("bit");

                    b.Property<bool>("is_required_cis")
                        .HasColumnType("bit");

                    b.Property<bool>("is_with_video_record")
                        .HasColumnType("bit");

                    b.Property<int>("length")
                        .HasColumnType("int");

                    b.Property<int>("marriage")
                        .HasColumnType("int");

                    b.Property<bool>("measuredInWarehouse")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("oldPrice")
                        .HasColumnType("int");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("reserve")
                        .HasColumnType("int");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<float>("volume")
                        .HasColumnType("real");

                    b.Property<float>("weight")
                        .HasColumnType("real");

                    b.Property<int>("width")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Fbo_Stock", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("total")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Product_Fbo_Stock", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Fbo_Stock_By_Delivery_Type", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("delivery_type_name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("delivery_type_color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "delivery_type_name");

                    b.ToTable("Product_Fbo_Stock_By_Delivery_Type", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Fbo_Stocks", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("total")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Product_Fbo_Stocks", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Fbo_Stocks_By_Delivery_Type", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("delivery_type_name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("delivery_type_color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "delivery_type_name");

                    b.ToTable("Product_Fbo_Stocks_By_Delivery_Type", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Marketplaces", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("OZON_FBS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OZON_REAL_FBS_EXPRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBER_FBS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WILDBERRIES_FBS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YANDEX_MARKET_FBS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YANDEX_MARKET_FBS_FAST")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Product_Marketplaces", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Fbo_Stock", b =>
                {
                    b.HasOne("Yunu.Api.Domain.Product", null)
                        .WithOne("fbo_stock")
                        .HasForeignKey("Yunu.Api.Domain.Product_Fbo_Stock", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Fbo_Stock_By_Delivery_Type", b =>
                {
                    b.HasOne("Yunu.Api.Domain.Product_Fbo_Stock", null)
                        .WithMany("by_delivery_type")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Fbo_Stocks", b =>
                {
                    b.HasOne("Yunu.Api.Domain.Product", null)
                        .WithOne("fbo_stocks")
                        .HasForeignKey("Yunu.Api.Domain.Product_Fbo_Stocks", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Fbo_Stocks_By_Delivery_Type", b =>
                {
                    b.HasOne("Yunu.Api.Domain.Product_Fbo_Stocks", null)
                        .WithMany("by_delivery_type")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Marketplaces", b =>
                {
                    b.HasOne("Yunu.Api.Domain.Product", null)
                        .WithOne("marketplaces")
                        .HasForeignKey("Yunu.Api.Domain.Product_Marketplaces", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product", b =>
                {
                    b.Navigation("fbo_stock");

                    b.Navigation("fbo_stocks");

                    b.Navigation("marketplaces");
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Fbo_Stock", b =>
                {
                    b.Navigation("by_delivery_type");
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Fbo_Stocks", b =>
                {
                    b.Navigation("by_delivery_type");
                });
#pragma warning restore 612, 618
        }
    }
}
