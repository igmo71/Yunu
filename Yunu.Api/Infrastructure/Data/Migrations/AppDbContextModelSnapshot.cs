// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Yunu.Api.Infrastructure.Data;

#nullable disable

namespace Yunu.Api.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "10.0.0-rc.2.25502.107")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Yunu.Api.Domain.Cabinet", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Cabinet", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.Category", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<bool>("isProductsExists")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("parentId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.CurrentStatus", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CurrentStatus", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.Delivery", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Delivery", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.Order", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("CabinetId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentStatusId")
                        .HasColumnType("int");

                    b.Property<int>("DeliveryId")
                        .HasColumnType("int");

                    b.Property<int>("TransportCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("addedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<string>("departureNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("fromMarketplace")
                        .HasColumnType("bit");

                    b.Property<bool>("isFake")
                        .HasColumnType("bit");

                    b.Property<bool>("is_allowed_accept_as_defective")
                        .HasColumnType("bit");

                    b.Property<string>("paymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("serviceCommission")
                        .HasColumnType("int");

                    b.Property<string>("tracking_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("CabinetId");

                    b.HasIndex("CurrentStatusId");

                    b.HasIndex("DeliveryId");

                    b.HasIndex("TransportCompanyId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("article")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("calculated_purchase_price")
                        .HasColumnType("real");

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("category_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comission")
                        .HasColumnType("int");

                    b.Property<string>("commission_acceptance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("commission_fbo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("commission_pickup_from_warehouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("foreign_delivery_price")
                        .HasColumnType("real");

                    b.Property<string>("foreign_delivery_price_currency_symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("foreign_purchase_price")
                        .HasColumnType("real");

                    b.Property<string>("foreign_purchase_price_currency_symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("height")
                        .HasColumnType("int");

                    b.Property<string>("instruction_link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instruction_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_bad_dimensions_from_mp")
                        .HasColumnType("bit");

                    b.Property<bool>("is_box")
                        .HasColumnType("bit");

                    b.Property<bool>("is_dimensions_diff")
                        .HasColumnType("bit");

                    b.Property<bool>("is_expirable")
                        .HasColumnType("bit");

                    b.Property<bool>("is_fifo")
                        .HasColumnType("bit");

                    b.Property<bool>("is_fragile")
                        .HasColumnType("bit");

                    b.Property<bool>("is_hidden")
                        .HasColumnType("bit");

                    b.Property<bool>("is_pack_in_bubble_wrap")
                        .HasColumnType("bit");

                    b.Property<bool>("is_pack_in_cardboard")
                        .HasColumnType("bit");

                    b.Property<bool>("is_required_cis")
                        .HasColumnType("bit");

                    b.Property<bool>("is_with_video_record")
                        .HasColumnType("bit");

                    b.Property<int>("length")
                        .HasColumnType("int");

                    b.Property<int>("marriage")
                        .HasColumnType("int");

                    b.Property<bool>("measuredInWarehouse")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("oldPrice")
                        .HasColumnType("int");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("reserve")
                        .HasColumnType("int");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<float>("volume")
                        .HasColumnType("real");

                    b.Property<float>("weight")
                        .HasColumnType("real");

                    b.Property<int>("width")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Fbo_Stocks", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("total")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Product_Fbo_Stocks", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Fbo_Stocks_By_Delivery_Type", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("delivery_type_name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("delivery_type_color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "delivery_type_name");

                    b.ToTable("Product_Fbo_Stocks_By_Delivery_Type", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Marketplaces", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("OZON_FBS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OZON_REAL_FBS_EXPRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBER_FBS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WILDBERRIES_FBS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YANDEX_MARKET_FBS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YANDEX_MARKET_FBS_FAST")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Product_Marketplaces", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.TransportCompany", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TransportCompany", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.Warehouse", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Warehouse", (string)null);
                });

            modelBuilder.Entity("Yunu.Api.Domain.Delivery", b =>
                {
                    b.OwnsOne("Yunu.Api.Domain.Address", "address", b1 =>
                        {
                            b1.Property<int>("Deliveryid")
                                .HasColumnType("int");

                            b1.Property<string>("city")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("full")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Deliveryid");

                            b1.ToTable("Delivery");

                            b1.WithOwner()
                                .HasForeignKey("Deliveryid");
                        });

                    b.Navigation("address");
                });

            modelBuilder.Entity("Yunu.Api.Domain.Order", b =>
                {
                    b.HasOne("Yunu.Api.Domain.Cabinet", "cabinet")
                        .WithMany()
                        .HasForeignKey("CabinetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yunu.Api.Domain.CurrentStatus", "currentStatus")
                        .WithMany()
                        .HasForeignKey("CurrentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yunu.Api.Domain.Delivery", "delivery")
                        .WithMany()
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yunu.Api.Domain.TransportCompany", "transportCompany")
                        .WithMany()
                        .HasForeignKey("TransportCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yunu.Api.Domain.Warehouse", "warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Yunu.Api.Domain.Consumer", "consumer", b1 =>
                        {
                            b1.Property<int>("Orderid")
                                .HasColumnType("int");

                            b1.Property<string>("firstName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("lastName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("patronymic")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("phone")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Orderid");

                            b1.ToTable("Order");

                            b1.WithOwner()
                                .HasForeignKey("Orderid");
                        });

                    b.Navigation("cabinet");

                    b.Navigation("consumer");

                    b.Navigation("currentStatus");

                    b.Navigation("delivery");

                    b.Navigation("transportCompany");

                    b.Navigation("warehouse");
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Fbo_Stocks", b =>
                {
                    b.HasOne("Yunu.Api.Domain.Product", null)
                        .WithOne("fbo_stocks")
                        .HasForeignKey("Yunu.Api.Domain.Product_Fbo_Stocks", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Fbo_Stocks_By_Delivery_Type", b =>
                {
                    b.HasOne("Yunu.Api.Domain.Product_Fbo_Stocks", null)
                        .WithMany("by_delivery_type")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Marketplaces", b =>
                {
                    b.HasOne("Yunu.Api.Domain.Product", null)
                        .WithOne("marketplaces")
                        .HasForeignKey("Yunu.Api.Domain.Product_Marketplaces", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product", b =>
                {
                    b.Navigation("fbo_stocks");

                    b.Navigation("marketplaces");
                });

            modelBuilder.Entity("Yunu.Api.Domain.Product_Fbo_Stocks", b =>
                {
                    b.Navigation("by_delivery_type");
                });
#pragma warning restore 612, 618
        }
    }
}
